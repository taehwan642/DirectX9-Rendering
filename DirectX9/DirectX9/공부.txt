정점 버퍼는 정점의 좌표나 색을 저장한 정점 데이터를 초기화 단계에서 1개의 오브젝트에 모아두고,
렌더링할 때 정점 버퍼 오브젝트를 호출해서 렌더링할 수 있도록 하는 구조.
정점 버퍼 데이터는 메모리가 허락하는 한 비디오 메모리에 저장되어, 렌더링할 때 AGP 버스를 통과하지 않고 그려지도록 만들어져 있으므로 고속 처리가 가능하다.
정점 버퍼를 사용하기 위해서는 LPDIRECT3DVERTEXBUFFER9 을 사용해야 한다.
정점 버퍼의 내용인 정점 데이터가 어떤 속성을 갖게 할 것인가는 Flexible Vertex Format 이라고 부르는 정점 편성 플래그로 지정한다.
이외에도 정점 선언 방법으로 정점 데이터를 생성하는 것도 가능하다.
정점 선언을 사용하는 방법은 정점 셰이더를 사용할 때 많은 도움이 된다.
rhs는 동차 좌표 w 성분의 역수를 의미한다. (Reciprocal of the W coordinate from the Homogeneous point)
이것은 3차원적으로 폴리곤을 렌더링할 경우 안쪽으로 향한 폴리곤 색을 보간할 때 사용한다.
memcpy를 사용해 정적 버퍼에 값을 쓸 때는 Lock, Unlock을 사용한다.
이 명령으로 둘러싸인 동안에는 다른 애플리케이션이 동일한 메모리를 사용하는 것이 불가능하기 때문에 안심할 수 있다.

트라이앵글 스트립은 렌더링할 때 Z자 형태로 정점을 지정하면 사각형이 렌더링된다.

텍스처 스테이지
텍스처를 폴리곤에 붙일 때 어떻게 붙일까를 결정하는 설정
예를 들어서, 폴리곤의 텍스처 색을 그대로 붙일 것인가
폴리곤의 색과 곱하고 나서 붙일 것인가 등의 설정을 한다.
(텍스처 스테이지는 주로 셰이더를 사용할 수 없는 고정 기능의 셰이딩을 위한 설정이기에
텍스처 스테이지 설정에서 할 수 있는 처리는 픽셀 셰이더에서도 할 수 있으므로 텍스처 스테이지 설정의 거의 필요 없다.)
텍스처 스테이지는 RestoreDeviceObjects() 안에서 초기 값을 설정한다. 애플리케이션 마법사를 사용하면 멋대로 설정되니 직접 설정하자.

샘플러 스테이지
텍스처를 읽어들이는 방법을 지정
텍스처 좌표가 원래의 텍스처를 초과했을 때 (음수, 1 이상 값)제일 바깥쪽의 색을 사용할지, 아니면 텍스처를 반복해서 입힐지 등의 설정을 한다.

2번 렌더링을 실시하는 2 패스 방법을 해보자.
얇게 겹혀 입힌다는 것이 알파 합성(알파 블렌딩)이다.
알파 합성이란 폴리곤을 렌더링할 때, 폴리곤 색을 그냥 출력하는 것이 아니라 이미 렌더링된 화면에 여러 가지 합성을 해서 출력하는 방법이다.
알파 합성은 현재 그려져 있는 색과 렌더링하는 폴리곤의 색을 합성한다.
따라서 반투명 폴리곤을 렌더링하기 전에, 불투명 오브젝트를 렌더링해야한다.

알파 합성 사용 여부를 SetRenderState로 세팅한 다음,
어떤 합성을 할지 결정하지 않으면 안된다.

